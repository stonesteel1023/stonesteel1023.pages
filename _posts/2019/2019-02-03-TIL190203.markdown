---
layout : post
date : 2019-02-03 11:00
title: "피해야하는 회사"
comments : true
tag : 도망쳐
---

> 출처 : 양파님의 블로그(추후 링크추가)

# 피해야하는 회사 - 중소기업의 경우

초보에게는 첫 3-5년이 정말 중요하다고 본다. 본인도 아주 열심히 일할 준비가 되어 있고 정말 많이 배울 수 있는 기회인데 직장 잘못 들어가면 이직이 힘든 것은 물론이고, 힘들게 배우는 것도 시간 낭비일 가능성이 높기 때문이다. 그러므로 월급이 짜더라도, 그 외의 조건이 안 좋더라도, 다음의 조건에 해당되지 않는 회사를 찾는 쪽이 낫다고 본다. 

1. 버전 콘트롤 시스템이 없다 

CVS, SVN, Perforce, 요즘 뜨는 github 등등, 뭘 쓰든지 별 상관없다. 하지만 버전 콘트롤 시스템을 안 쓰는 회사라면 진짜 정말 개발의 기본이 안 되어 있는 회사다. 그거 자체가 흠은 아닌데, 이런 회사에서 일하다보면 경험을 쌓는 귀중한 시간이 버전 컨트롤로 간단히 해결 될 수 있는 문제를 해결하는데에 허비하게 된다 (업계 용어로 '개삽질'). 

2. Automated deploy system, build system 이 없다 

위의 이유와 같다. 여러가지 environment 에 자동으로 디플로이 되는 빌드 시스템이 없으면 일 하면서 최소한 30% 는 개삽질에 시간을 버린다는데에 돈 걸 수 있다. 

그러면 빌드 시스템 쓴다고 개삽질 안하느냐 하면 그건 아니지 -_-; 하지만 시스템이 있는 회사와 없는 회사의 차이는, 있는 회사에서의 개삽질은 돈 되는 개삽질이라는 차이. 업계에서 곧잘 쓰이는 빌드 시스템 두세개 정도로 개고생 몇 년 했으면 나중에 devops 로 취업이 쉬워진다. 단순한 시스템 애드민보다 전문적인 devops 는 훨씬 전망이 좋다. 퍼펫 전문으로 하는 사람들 요즘에 일당 백만원 (500-600 파운드) 가볍게 부르더라 ㅡㅡ 

3. 모니터링 시스템이 없다 

전체 시스템 상태를 모니터하고 혹시라도 문제가 있으면 alert 가 날아가는 솔루션이 설치되어 있지 않다면 시스템 관리가 그리 중요하지 않다는 말이다. 그리고 프로가 아닌 이들을 들들 볶는다는 말도 된다. 코딩이면 코딩, 시스템 애드민이면 시스템 애드민 뭐 이렇게 특화가 필요한데 사이트 다운 될 때마다 불려가면 이것도 저것도 안 된다. 

4. 테스터가 없거나, 테스팅 environment, staging environment 가 없다

이것 역시 '특화문제'에 해당된다. 코딩하는 사람이 테스트 하면 안 된다는 말은 당연히 아니다. 유닛 테스트 쓰는 건 기본이어야 하고 버그도 고쳐야 하지만, 테스터가 없고 테스팅 환경이 없다면 이건 절차 자체를 모른다는 말이다. 그러므로 문제 해결하며 코딩할 시간에 유저 문제를 디버깅 한다거나, 그 외 상관 없는 문제 해결하느라 시간낭비할 가능성이 높다. 

5. 유닛 테스트를 안 쓰고, 코드 리뷰가 없다

난 실용주의자고 도덕적/종교적인 부분은 거의 없다고 자부한다. 유닛 테스트를 꼭 해야 된다 아니다를 떠나서, 유닛 테스트를 쓰는 곳에 처음 일해야 하는 이유는, 요즘은 유닛 테스트가 완전 기본이기 때문이다. TDD 까지 하는 마당에 유닛 테스트를 안 썼다고 하면, 자동 빌드도 없었다는 말이고, 그렇다면 정말 후진 곳에서 일했다고 깔봄 당하는 것은 물론이요, 이직 힘들어진다. 면접 볼 때 유닛 테스트 안 쓰고 코드 리뷰 안했다 말하면 (==> 자동 빌드 없었고 모니터링 없었고 테스트 자체가 없었다는 말) 자동적으로 개발 경험 자체를 다운그레이드 해버린다. 

코드 리뷰 참 중요하다. 특히 코드 잘 하는 사람과 코드 리뷰를 정기적으로 하면 정말 많이 배운다. 

5. 버그 트랙킹 시스템이 없다 

버그 트랙킹 시스템 혹은 티켓 시스템이 없다면, 문제가 생길 때마다 아무나 불러서 고치라고 시킨다는 것이고, 그렇다면 시스템 릴리즈 스케줄 이런 것도 없고, 버그 고쳤는지 안 고쳤는지 체크하는 방법은 '물어보는 것'이며, 제일 기본적인 문서화도 안 되어 있다는 말이다. 

6. 개발자에게 웹 디자인을 시킨다던지, 하드웨어 서포트를 요구한다 

이것 역시 '특화'문제에 해당한다. 그 자체로는 별 문제가 없다. 나도 포토샵 조금 쓸 줄 알고 웹 개발하니까 기본적인 CSS 랑 디자인 한다. 그리고 새로 시작한 동료라면 이런 저런 서포트 해주는 것도 당연하다. 하지만, 그걸 정상으로 생각하고 업무의 연장으로 본다면, 당신의 상관은 IT 개발에 대한 기본적인 개념이 없고, 당신은 시간낭비만 징하게 한다. 

웹 디자인이나 하드웨어 서포트가 안 좋다는 말이 아니다. 여러가지를 한꺼번에 할 거면 시너지가 나는 것을 해야 하는데 (예를 들어 한식 전문이지만 중식이랑 양식도 한다거나) 별 연관이 없는 거 하면 커리어에 도움은 덜 된다 (다림질이랑 군고구마 굽기라던다 ㅡㅡ). 

============

대강 생각나는 것만 적었는데, 결국 결론은 - 

- 어차피 첫 직장에선 삽질하면서 개고생하게 된다. 이왕에 고생하는 것, 좀 배워서 도움 되는 고생을 하자 
- 이직 할 때 물어보는 기본적인 질문이 있다. 이럴 때 저 위에 있는 리스트 경험 없다고 하면 점수 확 깎인다 
- '팔방미인'은 아주 작은 회사 아니면 별 도움 안 된다. 개발이면 개발, 디자인이면 디자인, 서포트면 서포트, 시스템 분석이면 분석으로 적성에 맞는 것을 하나 정해 그것에 올인 할 수 있는 곳이 좋다 

# 피해야하는 회사 - 대기업의 경우

* 이름이 그럴듯 해서 움직이기가 쉽지 않다 -_-; 이거야말로 개구리가 뜨뜻한 물에 편히 있다가 삶겨 죽는다는 (진짜 아닌 걸로 밝혀졌지만 하여튼) 비유에 딱 맞는 세팅이다. 월급 괜찮고, 사람들이 부러워해주고, 일도 그리 힘들지 않다 보니까 젊은 시절, 그 많은 에너지를 시장성 없는 일 열라 배우다가 보내버리면 30대 중반이 되어 시장성 있는 기술은 없고, 콧대는 높아져 있고, 월급 희생할 마음은 없고, 이름 없는데로 가자니 존심 상하고, 혹시라도 결혼했으면 집안 경제 때문에도 쉽게 못 움직이게 된다. 

* 최소한 내 주위에서는 직장생활했다면 사실 회사 이름이나 직급은 이직할 때 아주 크게 도움 안 된다. 유명 운동 선수들이 어떤 회사가 스폰서인가에 따라서 몸값 정해지는게 아니라 그 반대잖소? 김연아양이 XX 회사 광고 모델이라서 대단한게 아니라, 대단하니까 XX 회사 광고 모델인 거고, 무슨 광고인가는 상관 없이 연아양의 실제 실력이 중요한 것처럼, 개발자라면 목욕재계하고 앉아서 솔직히 생각해보자. 내가 *진짜* 할 수 있는게 뭘까? 내 *진짜* 기술은 뭘까? 별 거 없지 않소? 난 이거 할 때마다 등골이 서늘해지오. 관리한다 매니지한다 기획한다 이딴 거 빼고, 진짜 *팔 수 있는 기술* 이 뭔가 생각해 보시오. 그럴듯한 큰 회사에서 일하다 보면 이 감각이 퇴화해 버려서, 실제 살아남을 수 있는 기술력 없이 난 꽤나 대단하다는 착각에 빠지기 마련. 

* 회사 내에서도 움직이기가 쉽지 않다. 괜찮은 스타트업이라면 Devops 로 빠지기도 쉽고, 내가 디자인에 일가견이 있다면 디자인쪽으로 가기도 쉬우며, 난 영 개발직보다는 기획쪽이 낫다 하면 (난 '생존 최우선' 스탈이므로 이건 추천하지 않는다만) 프로젝트 매니저나 프로덕트 매니저, 아니면 스크럼 코치라도 -_- 할 수 있겠다. 큰 회사에선 그렇게 움직이는 것이 쉽지 않다. 특히 신입이라면 더하다. 사실 여러가지 경험해봐야 나한테 뭐가 맞는지 알 수 있는데, 큰 회사에선 오히려 그런 경험하는 것이 어렵다. 

* 처음 일 시작할 땐 뭐가 중요한지, 뭐가 쓸데없는지 잘 모른다. 그래서 큰 회사가 더 위험하다. 이것 저것 시키는 대로 막 하다 보면 시간은 시간대로 지나고 내 시장성은 바닥에 떨어졌을지도. 

* 큰 회사에선 직급 올라가기가 훨씬 더 힘들다. 그만큼 큰 그림 보기도 힘들다는 말이 된다. 괜찮은 스타트업에서는 사업 포커스를보기가 훨씬 더 쉽고, 무엇 때문에 어떤 결정을 내리는지 알 수 있다. 

* 로또보단 훨씬 더 괜찮은 확률로 -_- 큰 회사에게 팔릴 경우 대박날 수가 있다. 

* 그러므로, 같은 큰 회사라면 테크 중심인 회사로 무조건 들어가고 (예를 들어 삼성보다는 네이버, 다음), 젊고 아이 없다면 비전있고 괜찮은 스타트업, 그 다음으로 테크 중심인 중소기업, 그 다음으로 테크 중심 아닌 큰 회사, 그 다음이 (정말 어쩔 수 없으면 ㅜㅜ) 소규모의 테크 중심 아닌 회사를 선택하는 것을 권유한다.  

# 스타트업의 경우

내 결론은 결국 '추천 1위는 괜찮은 스타트업'이기 때문. 한국에서는 스타트업이라 하면 좀 인상이 안 좋은 것 같던데, 런던과 미국만 그런지는 몰라도 요즘 스타트업 엄청 많고, 괜찮은 곳도 많다. 특히나 큰 회사에서 프로세스 배울 건 다 배운, 기술력 있는 사람들이 넉넉한 펀딩 받아서 시작한 스타트업이라면 최고의 환경이다. 여러가지를 한꺼번에 배울 수 있고, 그냥 작은 회사라면 똑같이 여러가지 잡다한거 배워도 다 시간낭비였을 것이, 괜찮은 스타트업이라면 내가 뭘 좋아하는지, 내가 잘 할 수 있는 게 무엇인지 알 수 있는 기회가 많으며 그 쪽으로 옮겨가기도 쉽다. 아, 그리고 '괜찮은 스타트업인지'를 알 수 있는 쉬운 방법중에 하나가, 첫번 글에서 쓴 내용이 얼마나 해당되는가를 체크하는 것이다. 
