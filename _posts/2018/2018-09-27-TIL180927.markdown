---
layout: post
title: "테스트 공정"
date: 2018-09-27 23:00
tag: java
comments: true
---

> V-model
- 요건정의 ------------------------------- 통합테스트
  - 시스템 방식 설계 ----------- 결합테스트
      - 소프트웨어 설계 --- 단위테스트
          -   제조

![v](/images/2018/09/v-model.PNG)

# PG(programming)

# PT(Program Test)
 - = CT(Component Test or Coding Test), UT(Unit Test), 単体テスト
### 単体テストは、
 - 新規もしくは修正したプログラムを、文字通り単体でテストすることです。プロジェクトによっては、プログラム単体ではなく、機能単体でのテストを指すこともあります。
 - そのプログラムを書いた人が、動作保証として、単体テストまで行うことが多いと思います。まずは、ここで想定通りの動きをしなければ、先に進めません。

# IT(Integration Test)
 - = ST(String Test)、JT(Joint Test)、CT(Combined Test)、LT(Link Test), 結合テスト
### 結合テストでは、
 - 単体テストを合格したプログラムを組み合わせた時に問題が発生しないか、既存の機能と正しく連携できるかを確認します。
 - 例えば、データ登録機能の修正を行ったら、データ登録 → 検索 → 帳票印刷 → 他システムへのデータ連携 などと、後続の処理が正しく機能するかを確認します。

# ST(System Test)
 - = PT(Product Test), 総合テスト
### 総合テストでは、
 - 想定されている通りの動きをするかどうか、業務システムなら本番業務を滞りなく行うことができるかを、確認します。
 - この次の段階、かつ最終段階であるユーザー受入テストのフェーズで、致命的な欠陥が見つからないよう、開発側はここで、しっかりとテストをしておきます。

# ユーザー受入テスト
 - ユーザー受入テストは、UAT(User Accept Test)、UT(User Test)、AT(Accept Test)と略されます。
 - 総合テストを実施し、ITベンダーが問題ないと判断したら、ユーザーが実際の業務を当てはめてテストを行います。
 - このユーザー受入テストが完了し、問題ないと判断されれば、テストは終了。残すところは本番環境の作成や、移行ということになります。
